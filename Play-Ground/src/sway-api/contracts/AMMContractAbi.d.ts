/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.89.1
  Forc version: 0.60.0
  Fuel-Core version: 0.27.0
*/

import type {
  BytesLike,
  Contract,
  DecodedValue,
  FunctionFragment,
  Interface,
  InvokeFunction,
} from 'fuels';

import type { Option, Enum } from "./common";

export enum InitErrorInput { BytecodeRootAlreadySet = 'BytecodeRootAlreadySet', BytecodeRootDoesNotMatch = 'BytecodeRootDoesNotMatch', BytecodeRootNotSet = 'BytecodeRootNotSet', PairDoesNotDefinePool = 'PairDoesNotDefinePool' };
export enum InitErrorOutput { BytecodeRootAlreadySet = 'BytecodeRootAlreadySet', BytecodeRootDoesNotMatch = 'BytecodeRootDoesNotMatch', BytecodeRootNotSet = 'BytecodeRootNotSet', PairDoesNotDefinePool = 'PairDoesNotDefinePool' };

export type AssetIdInput = { bits: string };
export type AssetIdOutput = AssetIdInput;
export type ContractIdInput = { bits: string };
export type ContractIdOutput = ContractIdInput;
export type RegisterPoolEventInput = { asset_pair: [AssetIdInput, AssetIdInput], pool: ContractIdInput };
export type RegisterPoolEventOutput = { asset_pair: [AssetIdOutput, AssetIdOutput], pool: ContractIdOutput };
export type SetExchangeBytecodeRootEventInput = { root: string };
export type SetExchangeBytecodeRootEventOutput = SetExchangeBytecodeRootEventInput;

interface AMMContractAbiInterface extends Interface {
  functions: {
    add_pool: FunctionFragment;
    initialize: FunctionFragment;
    pool: FunctionFragment;
  };

  encodeFunctionData(functionFragment: 'add_pool', values: [[AssetIdInput, AssetIdInput], ContractIdInput]): Uint8Array;
  encodeFunctionData(functionFragment: 'initialize', values: [ContractIdInput]): Uint8Array;
  encodeFunctionData(functionFragment: 'pool', values: [[AssetIdInput, AssetIdInput]]): Uint8Array;

  decodeFunctionData(functionFragment: 'add_pool', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'initialize', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'pool', data: BytesLike): DecodedValue;
}

export class AMMContractAbi extends Contract {
  interface: AMMContractAbiInterface;
  functions: {
    add_pool: InvokeFunction<[asset_pair: [AssetIdInput, AssetIdInput], pool: ContractIdInput], void>;
    initialize: InvokeFunction<[exchange_bytecode_root: ContractIdInput], void>;
    pool: InvokeFunction<[asset_pair: [AssetIdInput, AssetIdInput]], Option<ContractIdOutput>>;
  };
}
