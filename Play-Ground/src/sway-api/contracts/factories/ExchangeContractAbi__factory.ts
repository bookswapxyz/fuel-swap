/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.89.1
  Forc version: 0.60.0
  Fuel-Core version: 0.27.0
*/

import { Interface, Contract, ContractFactory } from "fuels";
import type { Provider, Account, AbstractAddress, BytesLike, DeployContractOptions, StorageSlot } from "fuels";
import type { ExchangeContractAbi, ExchangeContractAbiInterface } from "../ExchangeContractAbi";

const _abi = {
  "encoding": "1",
  "types": [
    {
      "typeId": 0,
      "type": "()",
      "components": [],
      "typeParameters": null
    },
    {
      "typeId": 1,
      "type": "b256",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 2,
      "type": "bool",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 3,
      "type": "enum InitError",
      "components": [
        {
          "name": "AssetPairAlreadySet",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "AssetPairNotSet",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "IdenticalAssets",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 4,
      "type": "enum InputError",
      "components": [
        {
          "name": "CannotAddLessThanMinimumLiquidity",
          "type": 21,
          "typeArguments": null
        },
        {
          "name": "DeadlinePassed",
          "type": 21,
          "typeArguments": null
        },
        {
          "name": "ExpectedNonZeroAmount",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "ExpectedNonZeroParameter",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "InvalidAsset",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 5,
      "type": "enum Option",
      "components": [
        {
          "name": "None",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "Some",
          "type": 7,
          "typeArguments": null
        }
      ],
      "typeParameters": [
        7
      ]
    },
    {
      "typeId": 6,
      "type": "enum TransactionError",
      "components": [
        {
          "name": "DesiredAmountTooHigh",
          "type": 21,
          "typeArguments": null
        },
        {
          "name": "DesiredAmountTooLow",
          "type": 21,
          "typeArguments": null
        },
        {
          "name": "ExpectedNonZeroDeposit",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "InsufficientReserve",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "NoLiquidityToRemove",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 7,
      "type": "generic T",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 8,
      "type": "struct AddLiquidityEvent",
      "components": [
        {
          "name": "added_assets",
          "type": 11,
          "typeArguments": null
        },
        {
          "name": "liquidity",
          "type": 9,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 9,
      "type": "struct Asset",
      "components": [
        {
          "name": "id",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "amount",
          "type": 21,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 10,
      "type": "struct AssetId",
      "components": [
        {
          "name": "bits",
          "type": 1,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 11,
      "type": "struct AssetPair",
      "components": [
        {
          "name": "a",
          "type": 9,
          "typeArguments": null
        },
        {
          "name": "b",
          "type": 9,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 12,
      "type": "struct DefineAssetPairEvent",
      "components": [
        {
          "name": "asset_a_id",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "asset_b_id",
          "type": 10,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 13,
      "type": "struct DepositEvent",
      "components": [
        {
          "name": "deposited_asset",
          "type": 9,
          "typeArguments": null
        },
        {
          "name": "new_balance",
          "type": 21,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 14,
      "type": "struct PoolInfo",
      "components": [
        {
          "name": "reserves",
          "type": 11,
          "typeArguments": null
        },
        {
          "name": "liquidity",
          "type": 21,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 15,
      "type": "struct PreviewAddLiquidityInfo",
      "components": [
        {
          "name": "other_asset_to_add",
          "type": 9,
          "typeArguments": null
        },
        {
          "name": "liquidity_asset_to_receive",
          "type": 9,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 16,
      "type": "struct PreviewSwapInfo",
      "components": [
        {
          "name": "other_asset",
          "type": 9,
          "typeArguments": null
        },
        {
          "name": "sufficient_reserve",
          "type": 2,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 17,
      "type": "struct RemoveLiquidityEvent",
      "components": [
        {
          "name": "removed_reserve",
          "type": 11,
          "typeArguments": null
        },
        {
          "name": "burned_liquidity",
          "type": 9,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 18,
      "type": "struct RemoveLiquidityInfo",
      "components": [
        {
          "name": "removed_amounts",
          "type": 11,
          "typeArguments": null
        },
        {
          "name": "burned_liquidity",
          "type": 9,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 19,
      "type": "struct SwapEvent",
      "components": [
        {
          "name": "input",
          "type": 9,
          "typeArguments": null
        },
        {
          "name": "output",
          "type": 9,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 20,
      "type": "struct WithdrawEvent",
      "components": [
        {
          "name": "withdrawn_asset",
          "type": 9,
          "typeArguments": null
        },
        {
          "name": "remaining_balance",
          "type": 21,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 21,
      "type": "u64",
      "components": null,
      "typeParameters": null
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "desired_liquidity",
          "type": 21,
          "typeArguments": null
        },
        {
          "name": "deadline",
          "type": 21,
          "typeArguments": null
        }
      ],
      "name": "add_liquidity",
      "output": {
        "name": "",
        "type": 21,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "asset_id",
          "type": 10,
          "typeArguments": null
        }
      ],
      "name": "balance",
      "output": {
        "name": "",
        "type": 21,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "asset_a",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "asset_b",
          "type": 10,
          "typeArguments": null
        }
      ],
      "name": "constructor",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "deposit",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "payable",
          "arguments": []
        },
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "pool_info",
      "output": {
        "name": "",
        "type": 14,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "asset",
          "type": 9,
          "typeArguments": null
        }
      ],
      "name": "preview_add_liquidity",
      "output": {
        "name": "",
        "type": 15,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "exact_input_asset",
          "type": 9,
          "typeArguments": null
        }
      ],
      "name": "preview_swap_exact_input",
      "output": {
        "name": "",
        "type": 16,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "exact_output_asset",
          "type": 9,
          "typeArguments": null
        }
      ],
      "name": "preview_swap_exact_output",
      "output": {
        "name": "",
        "type": 16,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "min_asset_a",
          "type": 21,
          "typeArguments": null
        },
        {
          "name": "min_asset_b",
          "type": 21,
          "typeArguments": null
        },
        {
          "name": "deadline",
          "type": 21,
          "typeArguments": null
        }
      ],
      "name": "remove_liquidity",
      "output": {
        "name": "",
        "type": 18,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "payable",
          "arguments": []
        },
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "min_output",
          "type": 5,
          "typeArguments": [
            {
              "name": "",
              "type": 21,
              "typeArguments": null
            }
          ]
        },
        {
          "name": "deadline",
          "type": 21,
          "typeArguments": null
        }
      ],
      "name": "swap_exact_input",
      "output": {
        "name": "",
        "type": 21,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "payable",
          "arguments": []
        },
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "output",
          "type": 21,
          "typeArguments": null
        },
        {
          "name": "deadline",
          "type": 21,
          "typeArguments": null
        }
      ],
      "name": "swap_exact_output",
      "output": {
        "name": "",
        "type": 21,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "payable",
          "arguments": []
        },
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "test1",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "test2",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "test3",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "asset",
          "type": 9,
          "typeArguments": null
        }
      ],
      "name": "withdraw",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [
    {
      "logId": "13019369090464841419",
      "loggedType": {
        "name": "",
        "type": 3,
        "typeArguments": []
      }
    },
    {
      "logId": "4976236512326244199",
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": "17204801759039263145",
      "loggedType": {
        "name": "",
        "type": 6,
        "typeArguments": []
      }
    },
    {
      "logId": "4951180666019619331",
      "loggedType": {
        "name": "",
        "type": 8,
        "typeArguments": []
      }
    },
    {
      "logId": "9022120472644272136",
      "loggedType": {
        "name": "",
        "type": 12,
        "typeArguments": []
      }
    },
    {
      "logId": "12590297951544646752",
      "loggedType": {
        "name": "",
        "type": 13,
        "typeArguments": []
      }
    },
    {
      "logId": "11509934747247895544",
      "loggedType": {
        "name": "",
        "type": 17,
        "typeArguments": []
      }
    },
    {
      "logId": "8823645266456004970",
      "loggedType": {
        "name": "",
        "type": 19,
        "typeArguments": []
      }
    },
    {
      "logId": "1515152261580153489",
      "loggedType": {
        "name": "",
        "type": 21,
        "typeArguments": null
      }
    },
    {
      "logId": "15587543869071072960",
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": [
          {
            "name": "",
            "type": 21,
            "typeArguments": null
          }
        ]
      }
    },
    {
      "logId": "10918704871079408520",
      "loggedType": {
        "name": "",
        "type": 20,
        "typeArguments": []
      }
    }
  ],
  "messagesTypes": [],
  "configurables": [
    {
      "name": "LIQUIDITY_MINER_FEE",
      "configurableType": {
        "name": "",
        "type": 21,
        "typeArguments": null
      },
      "offset": 61256
    },
    {
      "name": "MINIMUM_LIQUIDITY",
      "configurableType": {
        "name": "",
        "type": 21,
        "typeArguments": null
      },
      "offset": 61160
    }
  ]
};

const _storageSlots: StorageSlot[] = [
  {
    "key": "b48b753af346966d0d169c0b2e3234611f65d5cfdb57c7b6e7cd6ca93707bee0",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "b48b753af346966d0d169c0b2e3234611f65d5cfdb57c7b6e7cd6ca93707bee1",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "b48b753af346966d0d169c0b2e3234611f65d5cfdb57c7b6e7cd6ca93707bee2",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "de9090cb50e71c2588c773487d1da7066d0c719849a7e58dc8b6397a25c567c0",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  }
];

export const ExchangeContractAbi__factory = {
  abi: _abi,

  storageSlots: _storageSlots,

  createInterface(): ExchangeContractAbiInterface {
    return new Interface(_abi) as unknown as ExchangeContractAbiInterface
  },

  connect(
    id: string | AbstractAddress,
    accountOrProvider: Account | Provider
  ): ExchangeContractAbi {
    return new Contract(id, _abi, accountOrProvider) as unknown as ExchangeContractAbi
  },

  async deployContract(
    bytecode: BytesLike,
    wallet: Account,
    options: DeployContractOptions = {}
  ): Promise<ExchangeContractAbi> {
    const factory = new ContractFactory(bytecode, _abi, wallet);

    const contract = await factory.deployContract({
      storageSlots: _storageSlots,
      ...options,
    });

    return contract as unknown as ExchangeContractAbi;
  }
}
